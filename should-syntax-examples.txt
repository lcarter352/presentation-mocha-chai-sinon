/*
 http://www.slideshare.net/mlilley/testing-node-js-with-mocha
 */

x.should.be.ok; // truthiness
x.should.be.true;  // === true
x.should.be.false;  // === false
x.should.be.empty; // length == 0
x.should.be.within(y,z);  // range
x.should.be.a(y); // typeof
x.should.be[.an].instanceOf(y);  // instanceOf
x.should.be.above(n); // > val
x.should.be.below(n); // < val
x.should.eql(y);  // ==
x.should.equal(y);  // ===
x.should.match(/y/);  // regexp match
x.should.have.length(y);  // .length == y
x.should.have.property(prop[, val]);  // prop exists
x.should.have.ownProperty(prop[, val]);  // prop exists (immediate)
x.should.have.status(code);  // .statusCode == y
x.should.have.header(field[, val]);  // .header with field & val
x.should.include(y);  // x.indexOf(y) != -1
x.should.throw([string|/regexp/]);  // thrown exception

Negation:
  x.should.not.be.ok

Chaining:
  x.should.be.a(‘string’).and.have.length(5)

Implementation:
  should added to Object as property
Therefore x must not be null or undefined
Use should.exist(x) to test first where needed.
